{"remainingRequest":"C:\\Users\\86152\\Desktop\\casual\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\86152\\Desktop\\casual\\admin\\src\\components\\tree-select\\tree-select.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\86152\\Desktop\\casual\\admin\\src\\components\\tree-select\\tree-select.vue","mtime":1575545426880},{"path":"C:\\Users\\86152\\Desktop\\casual\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\86152\\Desktop\\casual\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\86152\\Desktop\\casual\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\86152\\Desktop\\casual\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport Emitter from 'iview/src/mixins/emitter'\r\nimport TreeSelectTreeItem from './tree-select-tree.vue'\r\nexport default {\r\n  name: 'TreeSelect',\r\n  mixins: [Emitter],\r\n  components: {\r\n    TreeSelectTreeItem\r\n  },\r\n  props: {\r\n    value: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    data: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    loadData: Function\r\n  },\r\n  data () {\r\n    return {\r\n      isChangedByTree: true,\r\n      isInit: true\r\n    }\r\n  },\r\n  provide () {\r\n    return {\r\n      parent: this\r\n    }\r\n  },\r\n  methods: {\r\n    handleChange (selected) {\r\n      if (!this.isChangedByTree) this.$emit('input', selected)\r\n      this.isChangedByTree = false\r\n    },\r\n    handleTreeCheck (selectedArray) {\r\n      this.isChangedByTree = true\r\n      this.$emit('input', selectedArray.map(item => item.id))\r\n    },\r\n    handleClear () {\r\n      this.$refs.select.reset()\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["tree-select.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"tree-select.vue","sourceRoot":"src/components/tree-select","sourcesContent":["<template>\r\n  <Select\r\n    ref=\"select\"\r\n    class=\"tree-select\"\r\n    v-bind=\"$attrs\"\r\n    @on-change=\"handleChange\"\r\n    multiple\r\n  >\r\n    <tree-select-tree-item\r\n      :selectedArray=\"value\"\r\n      :data=\"data\"\r\n      @on-clear=\"handleClear\"\r\n      :load-data=\"loadData\"\r\n      @on-check=\"handleTreeCheck\"\r\n    ></tree-select-tree-item>\r\n  </Select>\r\n</template>\r\n\r\n<script>\r\nimport Emitter from 'iview/src/mixins/emitter'\r\nimport TreeSelectTreeItem from './tree-select-tree.vue'\r\nexport default {\r\n  name: 'TreeSelect',\r\n  mixins: [Emitter],\r\n  components: {\r\n    TreeSelectTreeItem\r\n  },\r\n  props: {\r\n    value: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    data: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    loadData: Function\r\n  },\r\n  data () {\r\n    return {\r\n      isChangedByTree: true,\r\n      isInit: true\r\n    }\r\n  },\r\n  provide () {\r\n    return {\r\n      parent: this\r\n    }\r\n  },\r\n  methods: {\r\n    handleChange (selected) {\r\n      if (!this.isChangedByTree) this.$emit('input', selected)\r\n      this.isChangedByTree = false\r\n    },\r\n    handleTreeCheck (selectedArray) {\r\n      this.isChangedByTree = true\r\n      this.$emit('input', selectedArray.map(item => item.id))\r\n    },\r\n    handleClear () {\r\n      this.$refs.select.reset()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.tree-select {\r\n  .ivu-select-dropdown {\r\n    padding: 0 6px;\r\n  }\r\n}\r\n</style>\r\n"]}]}