{"remainingRequest":"C:\\Users\\86152\\Desktop\\casual\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\86152\\Desktop\\casual\\admin\\src\\components\\editor\\editor.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"C:\\Users\\86152\\Desktop\\casual\\admin\\src\\components\\editor\\editor.vue","mtime":1575545426847},{"path":"C:\\Users\\86152\\Desktop\\casual\\admin\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\86152\\Desktop\\casual\\admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\86152\\Desktop\\casual\\admin\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\86152\\Desktop\\casual\\admin\\node_modules\\less-loader\\dist\\cjs.js","mtime":1575545488232},{"path":"C:\\Users\\86152\\Desktop\\casual\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\86152\\Desktop\\casual\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.editor-wrapper *{\r\n  z-index: 100 !important;\r\n}\r\n",{"version":3,"sources":["editor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuEA;AACA;AACA","file":"editor.vue","sourceRoot":"src/components/editor","sourcesContent":["<template>\r\n  <div class=\"editor-wrapper\">\r\n    <div :id=\"editorId\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Editor from 'wangeditor'\r\nimport 'wangeditor/release/wangEditor.min.css'\r\nimport { oneOf } from '@/libs/tools'\r\nexport default {\r\n  name: 'Editor',\r\n  props: {\r\n    value: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    /**\r\n     * 绑定的值的类型, enum: ['html', 'text']\r\n     */\r\n    valueType: {\r\n      type: String,\r\n      default: 'html',\r\n      validator: (val) => {\r\n        return oneOf(val, ['html', 'text'])\r\n      }\r\n    },\r\n    /**\r\n     * @description 设置change事件触发时间间隔\r\n     */\r\n    changeInterval: {\r\n      type: Number,\r\n      default: 200\r\n    },\r\n    /**\r\n     * @description 是否开启本地存储\r\n     */\r\n    cache: {\r\n      type: Boolean,\r\n      default: true\r\n    }\r\n  },\r\n  computed: {\r\n    editorId () {\r\n      return `editor${this._uid}`\r\n    }\r\n  },\r\n  methods: {\r\n    setHtml (val) {\r\n      this.editor.txt.html(val)\r\n    }\r\n  },\r\n  mounted () {\r\n    this.editor = new Editor(`#${this.editorId}`)\r\n    this.editor.customConfig.onchange = (html) => {\r\n      let text = this.editor.txt.text()\r\n      if (this.cache) localStorage.editorCache = html\r\n      this.$emit('input', this.valueType === 'html' ? html : text)\r\n      this.$emit('on-change', html, text)\r\n    }\r\n    this.editor.customConfig.onchangeTimeout = this.changeInterval\r\n    // create这个方法一定要在所有配置项之后调用\r\n    this.editor.create()\r\n    // 如果本地有存储加载本地存储内容\r\n    let html = this.value || localStorage.editorCache\r\n    if (html) this.editor.txt.html(html)\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.editor-wrapper *{\r\n  z-index: 100 !important;\r\n}\r\n</style>\r\n"]}]}