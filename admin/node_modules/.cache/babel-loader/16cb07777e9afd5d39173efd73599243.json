{"remainingRequest":"C:\\Users\\86152\\Desktop\\casual\\admin\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\86152\\Desktop\\casual\\admin\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\86152\\Desktop\\casual\\admin\\src\\libs\\axios.js","dependencies":[{"path":"C:\\Users\\86152\\Desktop\\casual\\admin\\src\\libs\\axios.js","mtime":1575545426885},{"path":"C:\\Users\\86152\\Desktop\\casual\\admin\\.babelrc","mtime":1575545426802},{"path":"C:\\Users\\86152\\Desktop\\casual\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\86152\\Desktop\\casual\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\86152\\Desktop\\casual\\admin\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _classCallCheck from \"C:\\\\Users\\\\86152\\\\Desktop\\\\casual\\\\admin\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\86152\\\\Desktop\\\\casual\\\\admin\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/createClass\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport axios from 'axios';\nimport store from '@/store'; // import { Spin } from 'iview'\n\nvar addErrorLog = function addErrorLog(errorInfo) {\n  var statusText = errorInfo.statusText,\n      status = errorInfo.status,\n      responseURL = errorInfo.request.responseURL;\n  var info = {\n    type: 'ajax',\n    code: status,\n    mes: statusText,\n    url: responseURL\n  };\n  if (!responseURL.includes('save_error_logger')) store.dispatch('addErrorLog', info);\n};\n\nvar HttpRequest =\n/*#__PURE__*/\nfunction () {\n  function HttpRequest() {\n    var baseUrl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : baseURL;\n\n    _classCallCheck(this, HttpRequest);\n\n    this.baseUrl = baseUrl;\n    this.queue = {};\n  }\n\n  _createClass(HttpRequest, [{\n    key: \"getInsideConfig\",\n    value: function getInsideConfig() {\n      var config = {\n        baseURL: this.baseUrl,\n        headers: {//\n        }\n      };\n      return config;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy(url) {\n      delete this.queue[url];\n\n      if (!Object.keys(this.queue).length) {// Spin.hide()\n      }\n    }\n  }, {\n    key: \"interceptors\",\n    value: function interceptors(instance, url) {\n      var _this = this;\n\n      // 请求拦截\n      instance.interceptors.request.use(function (config) {\n        // 添加全局的loading...\n        if (!Object.keys(_this.queue).length) {// Spin.show() // 不建议开启，因为界面不友好\n        }\n\n        _this.queue[url] = true;\n        return config;\n      }, function (error) {\n        return Promise.reject(error);\n      }); // 响应拦截\n\n      instance.interceptors.response.use(function (res) {\n        _this.destroy(url);\n\n        var data = res.data,\n            status = res.status;\n        return {\n          data: data,\n          status: status\n        };\n      }, function (error) {\n        _this.destroy(url);\n\n        var errorInfo = error.response;\n\n        if (!errorInfo) {\n          var _JSON$parse = JSON.parse(JSON.stringify(error)),\n              _JSON$parse$request = _JSON$parse.request,\n              statusText = _JSON$parse$request.statusText,\n              status = _JSON$parse$request.status,\n              config = _JSON$parse.config;\n\n          errorInfo = {\n            statusText: statusText,\n            status: status,\n            request: {\n              responseURL: config.url\n            }\n          };\n        }\n\n        addErrorLog(errorInfo);\n        return Promise.reject(error);\n      });\n    }\n  }, {\n    key: \"request\",\n    value: function request(options) {\n      var instance = axios.create();\n      options = Object.assign(this.getInsideConfig(), options);\n      this.interceptors(instance, options.url);\n      return instance(options);\n    }\n  }]);\n\n  return HttpRequest;\n}();\n\nexport default HttpRequest;",{"version":3,"sources":["C:/Users/86152/Desktop/casual/admin/src/libs/axios.js"],"names":["axios","store","addErrorLog","errorInfo","statusText","status","responseURL","request","info","type","code","mes","url","includes","dispatch","HttpRequest","baseUrl","baseURL","queue","config","headers","Object","keys","length","instance","interceptors","use","error","Promise","reject","response","res","destroy","data","JSON","parse","stringify","options","create","assign","getInsideConfig"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport store from '@/store'\r\n// import { Spin } from 'iview'\r\nconst addErrorLog = errorInfo => {\r\n  const { statusText, status, request: { responseURL } } = errorInfo\r\n  let info = {\r\n    type: 'ajax',\r\n    code: status,\r\n    mes: statusText,\r\n    url: responseURL\r\n  }\r\n  if (!responseURL.includes('save_error_logger')) store.dispatch('addErrorLog', info)\r\n}\r\n\r\nclass HttpRequest {\r\n  constructor (baseUrl = baseURL) {\r\n    this.baseUrl = baseUrl\r\n    this.queue = {}\r\n  }\r\n  getInsideConfig () {\r\n    const config = {\r\n      baseURL: this.baseUrl,\r\n      headers: {\r\n        //\r\n      }\r\n    }\r\n    return config\r\n  }\r\n  destroy (url) {\r\n    delete this.queue[url]\r\n    if (!Object.keys(this.queue).length) {\r\n      // Spin.hide()\r\n    }\r\n  }\r\n  interceptors (instance, url) {\r\n    // 请求拦截\r\n    instance.interceptors.request.use(config => {\r\n      // 添加全局的loading...\r\n      if (!Object.keys(this.queue).length) {\r\n        // Spin.show() // 不建议开启，因为界面不友好\r\n      }\r\n      this.queue[url] = true\r\n      return config\r\n    }, error => {\r\n      return Promise.reject(error)\r\n    })\r\n    // 响应拦截\r\n    instance.interceptors.response.use(res => {\r\n      this.destroy(url)\r\n      const { data, status } = res\r\n      return { data, status }\r\n    }, error => {\r\n      this.destroy(url)\r\n      let errorInfo = error.response\r\n      if (!errorInfo) {\r\n        const { request: { statusText, status }, config } = JSON.parse(JSON.stringify(error))\r\n        errorInfo = {\r\n          statusText,\r\n          status,\r\n          request: { responseURL: config.url }\r\n        }\r\n      }\r\n      addErrorLog(errorInfo)\r\n      return Promise.reject(error)\r\n    })\r\n  }\r\n  request (options) {\r\n    const instance = axios.create()\r\n    options = Object.assign(this.getInsideConfig(), options)\r\n    this.interceptors(instance, options.url)\r\n    return instance(options)\r\n  }\r\n}\r\nexport default HttpRequest\r\n"]}]}