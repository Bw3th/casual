{"remainingRequest":"C:\\Users\\86152\\Desktop\\casual\\admin\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\86152\\Desktop\\casual\\admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\86152\\Desktop\\casual\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\86152\\Desktop\\casual\\admin\\src\\view\\single-page\\message\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\86152\\Desktop\\casual\\admin\\src\\view\\single-page\\message\\index.vue","mtime":1575545426925},{"path":"C:\\Users\\86152\\Desktop\\casual\\admin\\.babelrc","mtime":1575545426802},{"path":"C:\\Users\\86152\\Desktop\\casual\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\86152\\Desktop\\casual\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\86152\\Desktop\\casual\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\86152\\Desktop\\casual\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.find\";\nimport _defineProperty from \"C:\\\\Users\\\\86152\\\\Desktop\\\\casual\\\\admin\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState, mapGetters, mapMutations, mapActions } from 'vuex';\nvar listDic = {\n  unread: 'messageUnreadList',\n  readed: 'messageReadedList',\n  trash: 'messageTrashList'\n};\nexport default {\n  name: 'message_page',\n  data: function data() {\n    return {\n      listLoading: true,\n      contentLoading: false,\n      currentMessageType: 'unread',\n      messageContent: '',\n      showingMsgItem: {}\n    };\n  },\n  computed: _objectSpread({}, mapState({\n    messageUnreadList: function messageUnreadList(state) {\n      return state.user.messageUnreadList;\n    },\n    messageReadedList: function messageReadedList(state) {\n      return state.user.messageReadedList;\n    },\n    messageTrashList: function messageTrashList(state) {\n      return state.user.messageTrashList;\n    },\n    messageList: function messageList() {\n      return this[listDic[this.currentMessageType]];\n    },\n    titleClass: function titleClass() {\n      return {\n        'not-unread-list': this.currentMessageType !== 'unread'\n      };\n    }\n  }), {}, mapGetters(['messageUnreadCount', 'messageReadedCount', 'messageTrashCount'])),\n  methods: _objectSpread({}, mapMutations([//\n  ]), {}, mapActions(['getContentByMsgId', 'getMessageList', 'hasRead', 'removeReaded', 'restoreTrash']), {\n    stopLoading: function stopLoading(name) {\n      this[name] = false;\n    },\n    handleSelect: function handleSelect(name) {\n      this.currentMessageType = name;\n    },\n    handleView: function handleView(msg_id) {\n      var _this = this;\n\n      this.contentLoading = true;\n      this.getContentByMsgId({\n        msg_id: msg_id\n      }).then(function (content) {\n        _this.messageContent = content;\n\n        var item = _this.messageList.find(function (item) {\n          return item.msg_id === msg_id;\n        });\n\n        if (item) _this.showingMsgItem = item;\n        if (_this.currentMessageType === 'unread') _this.hasRead({\n          msg_id: msg_id\n        });\n\n        _this.stopLoading('contentLoading');\n      }).catch(function () {\n        _this.stopLoading('contentLoading');\n      });\n    },\n    removeMsg: function removeMsg(item) {\n      item.loading = true;\n      var msg_id = item.msg_id;\n      if (this.currentMessageType === 'readed') this.removeReaded({\n        msg_id: msg_id\n      });else this.restoreTrash({\n        msg_id: msg_id\n      });\n    }\n  }),\n  mounted: function mounted() {\n    var _this2 = this;\n\n    this.listLoading = true; // 请求获取消息列表\n\n    this.getMessageList().then(function () {\n      return _this2.stopLoading('listLoading');\n    }).catch(function () {\n      return _this2.stopLoading('listLoading');\n    });\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <Card shadow>\r\n    <div>\r\n      <div class=\"message-page-con message-category-con\">\r\n        <Menu width=\"auto\" active-name=\"unread\" @on-select=\"handleSelect\">\r\n          <MenuItem name=\"unread\">\r\n            <span class=\"category-title\">未读消息</span><Badge style=\"margin-left: 10px\" :count=\"messageUnreadCount\"></Badge>\r\n          </MenuItem>\r\n          <MenuItem name=\"readed\">\r\n            <span class=\"category-title\">已读消息</span><Badge style=\"margin-left: 10px\" class-name=\"gray-dadge\" :count=\"messageReadedCount\"></Badge>\r\n          </MenuItem>\r\n          <MenuItem name=\"trash\">\r\n            <span class=\"category-title\">回收站</span><Badge style=\"margin-left: 10px\" class-name=\"gray-dadge\" :count=\"messageTrashCount\"></Badge>\r\n          </MenuItem>\r\n        </Menu>\r\n      </div>\r\n      <div class=\"message-page-con message-list-con\">\r\n        <Spin fix v-if=\"listLoading\" size=\"large\"></Spin>\r\n        <Menu\r\n          width=\"auto\"\r\n          active-name=\"\"\r\n          :class=\"titleClass\"\r\n          @on-select=\"handleView\"\r\n        >\r\n          <MenuItem v-for=\"item in messageList\" :name=\"item.msg_id\" :key=\"`msg_${item.msg_id}`\">\r\n            <div>\r\n              <p class=\"msg-title\">{{ item.title }}</p>\r\n              <Badge status=\"default\" :text=\"item.create_time\" />\r\n              <Button\r\n                style=\"float: right;margin-right: 20px;\"\r\n                :style=\"{ display: item.loading ? 'inline-block !important' : '' }\"\r\n                :loading=\"item.loading\"\r\n                size=\"small\"\r\n                :icon=\"currentMessageType === 'readed' ? 'md-trash' : 'md-redo'\"\r\n                :title=\"currentMessageType === 'readed' ? '删除' : '还原'\"\r\n                type=\"text\"\r\n                v-show=\"currentMessageType !== 'unread'\"\r\n                @click.native.stop=\"removeMsg(item)\"></Button>\r\n            </div>\r\n          </MenuItem>\r\n        </Menu>\r\n      </div>\r\n      <div class=\"message-page-con message-view-con\">\r\n        <Spin fix v-if=\"contentLoading\" size=\"large\"></Spin>\r\n        <div class=\"message-view-header\">\r\n          <h2 class=\"message-view-title\">{{ showingMsgItem.title }}</h2>\r\n          <time class=\"message-view-time\">{{ showingMsgItem.create_time }}</time>\r\n        </div>\r\n        <div v-html=\"messageContent\"></div>\r\n      </div>\r\n    </div>\r\n  </Card>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapGetters, mapMutations, mapActions } from 'vuex'\r\nconst listDic = {\r\n  unread: 'messageUnreadList',\r\n  readed: 'messageReadedList',\r\n  trash: 'messageTrashList'\r\n}\r\nexport default {\r\n  name: 'message_page',\r\n  data () {\r\n    return {\r\n      listLoading: true,\r\n      contentLoading: false,\r\n      currentMessageType: 'unread',\r\n      messageContent: '',\r\n      showingMsgItem: {}\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      messageUnreadList: state => state.user.messageUnreadList,\r\n      messageReadedList: state => state.user.messageReadedList,\r\n      messageTrashList: state => state.user.messageTrashList,\r\n      messageList () {\r\n        return this[listDic[this.currentMessageType]]\r\n      },\r\n      titleClass () {\r\n        return {\r\n          'not-unread-list': this.currentMessageType !== 'unread'\r\n        }\r\n      }\r\n    }),\r\n    ...mapGetters([\r\n      'messageUnreadCount',\r\n      'messageReadedCount',\r\n      'messageTrashCount'\r\n    ])\r\n  },\r\n  methods: {\r\n    ...mapMutations([\r\n      //\r\n    ]),\r\n    ...mapActions([\r\n      'getContentByMsgId',\r\n      'getMessageList',\r\n      'hasRead',\r\n      'removeReaded',\r\n      'restoreTrash'\r\n    ]),\r\n    stopLoading (name) {\r\n      this[name] = false\r\n    },\r\n    handleSelect (name) {\r\n      this.currentMessageType = name\r\n    },\r\n    handleView (msg_id) {\r\n      this.contentLoading = true\r\n      this.getContentByMsgId({ msg_id }).then(content => {\r\n        this.messageContent = content\r\n        const item = this.messageList.find(item => item.msg_id === msg_id)\r\n        if (item) this.showingMsgItem = item\r\n        if (this.currentMessageType === 'unread') this.hasRead({ msg_id })\r\n        this.stopLoading('contentLoading')\r\n      }).catch(() => {\r\n        this.stopLoading('contentLoading')\r\n      })\r\n    },\r\n    removeMsg (item) {\r\n      item.loading = true\r\n      const msg_id = item.msg_id\r\n      if (this.currentMessageType === 'readed') this.removeReaded({ msg_id })\r\n      else this.restoreTrash({ msg_id })\r\n    }\r\n  },\r\n  mounted () {\r\n    this.listLoading = true\r\n    // 请求获取消息列表\r\n    this.getMessageList().then(() => this.stopLoading('listLoading')).catch(() => this.stopLoading('listLoading'))\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.message-page{\r\n  &-con{\r\n    height: ~\"calc(100vh - 176px)\";\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    position: relative;\r\n    &.message-category-con{\r\n      border-right: 1px solid #e6e6e6;\r\n      width: 200px;\r\n    }\r\n    &.message-list-con{\r\n      border-right: 1px solid #e6e6e6;\r\n      width: 230px;\r\n    }\r\n    &.message-view-con{\r\n      position: absolute;\r\n      left: 446px;\r\n      top: 16px;\r\n      right: 16px;\r\n      bottom: 16px;\r\n      overflow: auto;\r\n      padding: 12px 20px 0;\r\n      .message-view-header{\r\n        margin-bottom: 20px;\r\n        .message-view-title{\r\n          display: inline-block;\r\n        }\r\n        .message-view-time{\r\n          margin-left: 20px;\r\n        }\r\n      }\r\n    }\r\n    .category-title{\r\n      display: inline-block;\r\n      width: 65px;\r\n    }\r\n    .gray-dadge{\r\n      background: gainsboro;\r\n    }\r\n    .not-unread-list{\r\n      .msg-title{\r\n        color: rgb(170, 169, 169);\r\n      }\r\n      .ivu-menu-item{\r\n        .ivu-btn.ivu-btn-text.ivu-btn-small.ivu-btn-icon-only{\r\n          display: none;\r\n        }\r\n        &:hover{\r\n          .ivu-btn.ivu-btn-text.ivu-btn-small.ivu-btn-icon-only{\r\n            display: inline-block;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n"],"sourceRoot":"src/view/single-page/message"}]}