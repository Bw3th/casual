{"remainingRequest":"C:\\Users\\86152\\Desktop\\casual\\iview-admin\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\86152\\Desktop\\casual\\iview-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\86152\\Desktop\\casual\\iview-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\86152\\Desktop\\casual\\iview-admin\\src\\components\\split-pane\\split.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\86152\\Desktop\\casual\\iview-admin\\src\\components\\split-pane\\split.vue","mtime":1575545426875},{"path":"C:\\Users\\86152\\Desktop\\casual\\iview-admin\\.babelrc","mtime":1575545426802},{"path":"C:\\Users\\86152\\Desktop\\casual\\iview-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\86152\\Desktop\\casual\\iview-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\86152\\Desktop\\casual\\iview-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\86152\\Desktop\\casual\\iview-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { oneOf, on, off } from '@/libs/tools';\nimport Trigger from \"./trigger.vue\";\nexport default {\n  name: 'SplitPane',\n  components: {\n    Trigger: Trigger\n  },\n  props: {\n    value: {\n      type: [Number, String],\n      default: 0.5\n    },\n    mode: {\n      validator: function validator(value) {\n        return oneOf(value, ['horizontal', 'vertical']);\n      },\n      default: 'horizontal'\n    },\n    min: {\n      type: [Number, String],\n      default: '40px'\n    },\n    max: {\n      type: [Number, String],\n      default: '40px'\n    }\n  },\n\n  /**\r\n   * Events\r\n   * @on-move-start\r\n   * @on-moving 返回值：事件对象，但是在事件对象中加入了两个参数：atMin(当前是否在最小值处), atMax(当前是否在最大值处)\r\n   * @on-move-end\r\n   */\n  data: function data() {\n    return {\n      prefix: 'ivu-split',\n      offset: 0,\n      oldOffset: 0,\n      isMoving: false\n    };\n  },\n  computed: {\n    wrapperClasses: function wrapperClasses() {\n      return [\"\".concat(this.prefix, \"-wrapper\"), this.isMoving ? 'no-select' : ''];\n    },\n    isHorizontal: function isHorizontal() {\n      return this.mode === 'horizontal';\n    },\n    anotherOffset: function anotherOffset() {\n      return 100 - this.offset;\n    },\n    valueIsPx: function valueIsPx() {\n      return typeof this.value === 'string';\n    },\n    offsetSize: function offsetSize() {\n      return this.isHorizontal ? 'offsetWidth' : 'offsetHeight';\n    },\n    computedMin: function computedMin() {\n      return this.getComputedThresholdValue('min');\n    },\n    computedMax: function computedMax() {\n      return this.getComputedThresholdValue('max');\n    }\n  },\n  methods: {\n    px2percent: function px2percent(numerator, denominator) {\n      return parseFloat(numerator) / parseFloat(denominator);\n    },\n    getComputedThresholdValue: function getComputedThresholdValue(type) {\n      var size = this.$refs.outerWrapper[this.offsetSize];\n      if (this.valueIsPx) return typeof this[type] === 'string' ? this[type] : size * this[type];else return typeof this[type] === 'string' ? this.px2percent(this[type], size) : this[type];\n    },\n    getMin: function getMin(value1, value2) {\n      if (this.valueIsPx) return \"\".concat(Math.min(parseFloat(value1), parseFloat(value2)), \"px\");else return Math.min(value1, value2);\n    },\n    getMax: function getMax(value1, value2) {\n      if (this.valueIsPx) return \"\".concat(Math.max(parseFloat(value1), parseFloat(value2)), \"px\");else return Math.max(value1, value2);\n    },\n    getAnotherOffset: function getAnotherOffset(value) {\n      var res = 0;\n      if (this.valueIsPx) res = \"\".concat(this.$refs.outerWrapper[this.offsetSize] - parseFloat(value), \"px\");else res = 1 - value;\n      return res;\n    },\n    handleMove: function handleMove(e) {\n      var pageOffset = this.isHorizontal ? e.pageX : e.pageY;\n      var offset = pageOffset - this.initOffset;\n      var outerWidth = this.$refs.outerWrapper[this.offsetSize];\n      var value = this.valueIsPx ? \"\".concat(parseFloat(this.oldOffset) + offset, \"px\") : this.px2percent(outerWidth * this.oldOffset + offset, outerWidth);\n      var anotherValue = this.getAnotherOffset(value);\n      if (parseFloat(value) <= parseFloat(this.computedMin)) value = this.getMax(value, this.computedMin);\n      if (parseFloat(anotherValue) <= parseFloat(this.computedMax)) value = this.getAnotherOffset(this.getMax(anotherValue, this.computedMax));\n      e.atMin = this.value === this.computedMin;\n      e.atMax = this.valueIsPx ? this.getAnotherOffset(this.value) === this.computedMax : this.getAnotherOffset(this.value).toFixed(5) === this.computedMax.toFixed(5);\n      this.$emit('input', value);\n      this.$emit('on-moving', e);\n    },\n    handleUp: function handleUp() {\n      this.isMoving = false;\n      off(document, 'mousemove', this.handleMove);\n      off(document, 'mouseup', this.handleUp);\n      this.$emit('on-move-end');\n    },\n    handleMousedown: function handleMousedown(e) {\n      this.initOffset = this.isHorizontal ? e.pageX : e.pageY;\n      this.oldOffset = this.value;\n      this.isMoving = true;\n      on(document, 'mousemove', this.handleMove);\n      on(document, 'mouseup', this.handleUp);\n      this.$emit('on-move-start');\n    }\n  },\n  watch: {\n    value: function value() {\n      this.offset = (this.valueIsPx ? this.px2percent(this.value, this.$refs.outerWrapper[this.offsetSize]) : this.value) * 10000 / 100;\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      _this.offset = (_this.valueIsPx ? _this.px2percent(_this.value, _this.$refs.outerWrapper[_this.offsetSize]) : _this.value) * 10000 / 100;\n    });\n  }\n};",{"version":3,"sources":["split.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div ref=\"outerWrapper\" :class=\"wrapperClasses\">\r\n    <div v-if=\"isHorizontal\" :class=\"`${prefix}-horizontal`\">\r\n      <div :style=\"{right: `${anotherOffset}%`}\" :class=\"[`${prefix}-pane`, 'left-pane']\"><slot name=\"left\"/></div>\r\n      <div :class=\"`${prefix}-trigger-con`\" :style=\"{left: `${offset}%`}\" @mousedown=\"handleMousedown\">\r\n        <slot name=\"trigger\">\r\n          <trigger mode=\"vertical\"/>\r\n        </slot>\r\n      </div>\r\n      <div :style=\"{left: `${offset}%`}\" :class=\"[`${prefix}-pane`, 'right-pane']\"><slot name=\"right\"/></div>\r\n    </div>\r\n    <div v-else :class=\"`${prefix}-vertical`\">\r\n      <div :style=\"{bottom: `${anotherOffset}%`}\" :class=\"[`${prefix}-pane`, 'top-pane']\"><slot name=\"top\"/></div>\r\n     <div :class=\"`${prefix}-trigger-con`\" :style=\"{top: `${offset}%`}\" @mousedown=\"handleMousedown\">\r\n        <slot name=\"trigger\">\r\n          <trigger mode=\"horizontal\"/>\r\n        </slot>\r\n      </div>\r\n      <div :style=\"{top: `${offset}%`}\" :class=\"[`${prefix}-pane`, 'bottom-pane']\"><slot name=\"bottom\"/></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { oneOf, on, off } from '@/libs/tools'\r\nimport Trigger from './trigger.vue'\r\nexport default {\r\n  name: 'SplitPane',\r\n  components: {\r\n    Trigger\r\n  },\r\n  props: {\r\n    value: {\r\n      type: [Number, String],\r\n      default: 0.5\r\n    },\r\n    mode: {\r\n      validator (value) {\r\n        return oneOf(value, ['horizontal', 'vertical'])\r\n      },\r\n      default: 'horizontal'\r\n    },\r\n    min: {\r\n      type: [Number, String],\r\n      default: '40px'\r\n    },\r\n    max: {\r\n      type: [Number, String],\r\n      default: '40px'\r\n    }\r\n  },\r\n  /**\r\n   * Events\r\n   * @on-move-start\r\n   * @on-moving 返回值：事件对象，但是在事件对象中加入了两个参数：atMin(当前是否在最小值处), atMax(当前是否在最大值处)\r\n   * @on-move-end\r\n   */\r\n  data () {\r\n    return {\r\n      prefix: 'ivu-split',\r\n      offset: 0,\r\n      oldOffset: 0,\r\n      isMoving: false\r\n    }\r\n  },\r\n  computed: {\r\n    wrapperClasses () {\r\n      return [\r\n        `${this.prefix}-wrapper`,\r\n        this.isMoving ? 'no-select' : ''\r\n      ]\r\n    },\r\n    isHorizontal () {\r\n      return this.mode === 'horizontal'\r\n    },\r\n    anotherOffset () {\r\n      return 100 - this.offset\r\n    },\r\n    valueIsPx () {\r\n      return typeof this.value === 'string'\r\n    },\r\n    offsetSize () {\r\n      return this.isHorizontal ? 'offsetWidth' : 'offsetHeight'\r\n    },\r\n    computedMin () {\r\n      return this.getComputedThresholdValue('min')\r\n    },\r\n    computedMax () {\r\n      return this.getComputedThresholdValue('max')\r\n    }\r\n  },\r\n  methods: {\r\n    px2percent (numerator, denominator) {\r\n      return parseFloat(numerator) / parseFloat(denominator)\r\n    },\r\n    getComputedThresholdValue (type) {\r\n      let size = this.$refs.outerWrapper[this.offsetSize]\r\n      if (this.valueIsPx) return typeof this[type] === 'string' ? this[type] : size * this[type]\r\n      else return typeof this[type] === 'string' ? this.px2percent(this[type], size) : this[type]\r\n    },\r\n    getMin (value1, value2) {\r\n      if (this.valueIsPx) return `${Math.min(parseFloat(value1), parseFloat(value2))}px`\r\n      else return Math.min(value1, value2)\r\n    },\r\n    getMax (value1, value2) {\r\n      if (this.valueIsPx) return `${Math.max(parseFloat(value1), parseFloat(value2))}px`\r\n      else return Math.max(value1, value2)\r\n    },\r\n    getAnotherOffset (value) {\r\n      let res = 0\r\n      if (this.valueIsPx) res = `${this.$refs.outerWrapper[this.offsetSize] - parseFloat(value)}px`\r\n      else res = 1 - value\r\n      return res\r\n    },\r\n    handleMove (e) {\r\n      let pageOffset = this.isHorizontal ? e.pageX : e.pageY\r\n      let offset = pageOffset - this.initOffset\r\n      let outerWidth = this.$refs.outerWrapper[this.offsetSize]\r\n      let value = this.valueIsPx ? `${parseFloat(this.oldOffset) + offset}px` : (this.px2percent(outerWidth * this.oldOffset + offset, outerWidth))\r\n      let anotherValue = this.getAnotherOffset(value)\r\n      if (parseFloat(value) <= parseFloat(this.computedMin)) value = this.getMax(value, this.computedMin)\r\n      if (parseFloat(anotherValue) <= parseFloat(this.computedMax)) value = this.getAnotherOffset(this.getMax(anotherValue, this.computedMax))\r\n      e.atMin = this.value === this.computedMin\r\n      e.atMax = this.valueIsPx ? this.getAnotherOffset(this.value) === this.computedMax : this.getAnotherOffset(this.value).toFixed(5) === this.computedMax.toFixed(5)\r\n      this.$emit('input', value)\r\n      this.$emit('on-moving', e)\r\n    },\r\n    handleUp () {\r\n      this.isMoving = false\r\n      off(document, 'mousemove', this.handleMove)\r\n      off(document, 'mouseup', this.handleUp)\r\n      this.$emit('on-move-end')\r\n    },\r\n    handleMousedown (e) {\r\n      this.initOffset = this.isHorizontal ? e.pageX : e.pageY\r\n      this.oldOffset = this.value\r\n      this.isMoving = true\r\n      on(document, 'mousemove', this.handleMove)\r\n      on(document, 'mouseup', this.handleUp)\r\n      this.$emit('on-move-start')\r\n    }\r\n  },\r\n  watch: {\r\n    value () {\r\n      this.offset = (this.valueIsPx ? this.px2percent(this.value, this.$refs.outerWrapper[this.offsetSize]) : this.value) * 10000 / 100\r\n    }\r\n  },\r\n  mounted () {\r\n    this.$nextTick(() => {\r\n      this.offset = (this.valueIsPx ? this.px2percent(this.value, this.$refs.outerWrapper[this.offsetSize]) : this.value) * 10000 / 100\r\n    })\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\">\r\n@import './index.less';\r\n</style>\r\n"],"sourceRoot":"src/components/split-pane"}]}