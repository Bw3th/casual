{"remainingRequest":"C:\\Users\\86152\\Desktop\\casual\\admin\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\86152\\Desktop\\casual\\admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\86152\\Desktop\\casual\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\86152\\Desktop\\casual\\admin\\src\\components\\tree-select\\tree-select.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\86152\\Desktop\\casual\\admin\\src\\components\\tree-select\\tree-select.vue","mtime":1575545426880},{"path":"C:\\Users\\86152\\Desktop\\casual\\admin\\.babelrc","mtime":1575545426802},{"path":"C:\\Users\\86152\\Desktop\\casual\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\86152\\Desktop\\casual\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\86152\\Desktop\\casual\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\86152\\Desktop\\casual\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Emitter from 'iview/src/mixins/emitter';\nimport TreeSelectTreeItem from \"./tree-select-tree.vue\";\nexport default {\n  name: 'TreeSelect',\n  mixins: [Emitter],\n  components: {\n    TreeSelectTreeItem: TreeSelectTreeItem\n  },\n  props: {\n    value: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    data: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    loadData: Function\n  },\n  data: function data() {\n    return {\n      isChangedByTree: true,\n      isInit: true\n    };\n  },\n  provide: function provide() {\n    return {\n      parent: this\n    };\n  },\n  methods: {\n    handleChange: function handleChange(selected) {\n      if (!this.isChangedByTree) this.$emit('input', selected);\n      this.isChangedByTree = false;\n    },\n    handleTreeCheck: function handleTreeCheck(selectedArray) {\n      this.isChangedByTree = true;\n      this.$emit('input', selectedArray.map(function (item) {\n        return item.id;\n      }));\n    },\n    handleClear: function handleClear() {\n      this.$refs.select.reset();\n    }\n  }\n};",{"version":3,"sources":["tree-select.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAmBA,OAAA,OAAA,MAAA,0BAAA;AACA,OAAA,kBAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,MAAA,EAAA,CAAA,OAAA,CAFA;AAGA,EAAA,UAAA,EAAA;AACA,IAAA,kBAAA,EAAA;AADA,GAHA;AAMA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA;AAFA,KADA;AAKA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA;AAFA,KALA;AASA,IAAA,QAAA,EAAA;AATA,GANA;AAiBA,EAAA,IAjBA,kBAiBA;AACA,WAAA;AACA,MAAA,eAAA,EAAA,IADA;AAEA,MAAA,MAAA,EAAA;AAFA,KAAA;AAIA,GAtBA;AAuBA,EAAA,OAvBA,qBAuBA;AACA,WAAA;AACA,MAAA,MAAA,EAAA;AADA,KAAA;AAGA,GA3BA;AA4BA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,wBACA,QADA,EACA;AACA,UAAA,CAAA,KAAA,eAAA,EAAA,KAAA,KAAA,CAAA,OAAA,EAAA,QAAA;AACA,WAAA,eAAA,GAAA,KAAA;AACA,KAJA;AAKA,IAAA,eALA,2BAKA,aALA,EAKA;AACA,WAAA,eAAA,GAAA,IAAA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,aAAA,CAAA,GAAA,CAAA,UAAA,IAAA;AAAA,eAAA,IAAA,CAAA,EAAA;AAAA,OAAA,CAAA;AACA,KARA;AASA,IAAA,WATA,yBASA;AACA,WAAA,KAAA,CAAA,MAAA,CAAA,KAAA;AACA;AAXA;AA5BA,CAAA","sourcesContent":["<template>\r\n  <Select\r\n    ref=\"select\"\r\n    class=\"tree-select\"\r\n    v-bind=\"$attrs\"\r\n    @on-change=\"handleChange\"\r\n    multiple\r\n  >\r\n    <tree-select-tree-item\r\n      :selectedArray=\"value\"\r\n      :data=\"data\"\r\n      @on-clear=\"handleClear\"\r\n      :load-data=\"loadData\"\r\n      @on-check=\"handleTreeCheck\"\r\n    ></tree-select-tree-item>\r\n  </Select>\r\n</template>\r\n\r\n<script>\r\nimport Emitter from 'iview/src/mixins/emitter'\r\nimport TreeSelectTreeItem from './tree-select-tree.vue'\r\nexport default {\r\n  name: 'TreeSelect',\r\n  mixins: [Emitter],\r\n  components: {\r\n    TreeSelectTreeItem\r\n  },\r\n  props: {\r\n    value: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    data: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    loadData: Function\r\n  },\r\n  data () {\r\n    return {\r\n      isChangedByTree: true,\r\n      isInit: true\r\n    }\r\n  },\r\n  provide () {\r\n    return {\r\n      parent: this\r\n    }\r\n  },\r\n  methods: {\r\n    handleChange (selected) {\r\n      if (!this.isChangedByTree) this.$emit('input', selected)\r\n      this.isChangedByTree = false\r\n    },\r\n    handleTreeCheck (selectedArray) {\r\n      this.isChangedByTree = true\r\n      this.$emit('input', selectedArray.map(item => item.id))\r\n    },\r\n    handleClear () {\r\n      this.$refs.select.reset()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.tree-select {\r\n  .ivu-select-dropdown {\r\n    padding: 0 6px;\r\n  }\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/tree-select"}]}