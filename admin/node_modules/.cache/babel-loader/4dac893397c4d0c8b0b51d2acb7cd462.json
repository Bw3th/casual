{"remainingRequest":"C:\\Users\\86152\\Desktop\\casual\\iview-admin\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\86152\\Desktop\\casual\\iview-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\86152\\Desktop\\casual\\iview-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\86152\\Desktop\\casual\\iview-admin\\src\\components\\main\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\86152\\Desktop\\casual\\iview-admin\\src\\components\\main\\main.vue","mtime":1575545426869},{"path":"C:\\Users\\86152\\Desktop\\casual\\iview-admin\\.babelrc","mtime":1575545426802},{"path":"C:\\Users\\86152\\Desktop\\casual\\iview-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\86152\\Desktop\\casual\\iview-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\86152\\Desktop\\casual\\iview-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\86152\\Desktop\\casual\\iview-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.function.name\";\nimport _toConsumableArray from \"C:\\\\Users\\\\86152\\\\Desktop\\\\casual\\\\iview-admin\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"C:\\\\Users\\\\86152\\\\Desktop\\\\casual\\\\iview-admin\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport SideMenu from \"./components/side-menu\";\nimport HeaderBar from \"./components/header-bar\";\nimport TagsNav from \"./components/tags-nav\";\nimport User from \"./components/user\";\nimport ABackTop from \"./components/a-back-top\";\nimport Fullscreen from \"./components/fullscreen\";\nimport Language from \"./components/language\";\nimport ErrorStore from \"./components/error-store\";\nimport { mapMutations, mapActions, mapGetters } from 'vuex';\nimport { getNewTagList, routeEqual } from '@/libs/util';\nimport routers from '@/router/routers';\nimport minLogo from '@/assets/images/logo-min.jpg';\nimport maxLogo from '@/assets/images/logo.jpg';\nimport \"./main.less\";\nexport default {\n  name: 'Main',\n  components: {\n    SideMenu: SideMenu,\n    HeaderBar: HeaderBar,\n    Language: Language,\n    TagsNav: TagsNav,\n    Fullscreen: Fullscreen,\n    ErrorStore: ErrorStore,\n    User: User,\n    ABackTop: ABackTop\n  },\n  data: function data() {\n    return {\n      collapsed: false,\n      minLogo: minLogo,\n      maxLogo: maxLogo,\n      isFullscreen: false\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['errorCount']), {\n    tagNavList: function tagNavList() {\n      return this.$store.state.app.tagNavList;\n    },\n    tagRouter: function tagRouter() {\n      return this.$store.state.app.tagRouter;\n    },\n    userAvatar: function userAvatar() {\n      return this.$store.state.user.avatarImgPath;\n    },\n    cacheList: function cacheList() {\n      var list = ['ParentView'].concat(_toConsumableArray(this.tagNavList.length ? this.tagNavList.filter(function (item) {\n        return !(item.meta && item.meta.notCache);\n      }).map(function (item) {\n        return item.name;\n      }) : []));\n      return list;\n    },\n    menuList: function menuList() {\n      return this.$store.getters.menuList;\n    },\n    local: function local() {\n      return this.$store.state.app.local;\n    },\n    hasReadErrorPage: function hasReadErrorPage() {\n      return this.$store.state.app.hasReadErrorPage;\n    },\n    unreadCount: function unreadCount() {\n      return this.$store.state.user.unreadCount;\n    }\n  }),\n  methods: _objectSpread({}, mapMutations(['setBreadCrumb', 'setTagNavList', 'addTag', 'setLocal', 'setHomeRoute', 'closeTag']), {}, mapActions(['handleLogin', 'getUnreadMessageCount']), {\n    turnToPage: function turnToPage(route) {\n      var _ref = {},\n          name = _ref.name,\n          params = _ref.params,\n          query = _ref.query;\n      if (typeof route === 'string') name = route;else {\n        name = route.name;\n        params = route.params;\n        query = route.query;\n      }\n\n      if (name.indexOf('isTurnByHref_') > -1) {\n        window.open(name.split('_')[1]);\n        return;\n      }\n\n      this.$router.push({\n        name: name,\n        params: params,\n        query: query\n      });\n    },\n    handleCollapsedChange: function handleCollapsedChange(state) {\n      this.collapsed = state;\n    },\n    handleCloseTag: function handleCloseTag(res, type, route) {\n      if (type !== 'others') {\n        if (type === 'all') {\n          this.turnToPage(this.$config.homeName);\n        } else {\n          if (routeEqual(this.$route, route)) {\n            this.closeTag(route);\n          }\n        }\n      }\n\n      this.setTagNavList(res);\n    },\n    handleClick: function handleClick(item) {\n      this.turnToPage(item);\n    }\n  }),\n  watch: {\n    '$route': function $route(newRoute) {\n      var name = newRoute.name,\n          query = newRoute.query,\n          params = newRoute.params,\n          meta = newRoute.meta;\n      this.addTag({\n        route: {\n          name: name,\n          query: query,\n          params: params,\n          meta: meta\n        },\n        type: 'push'\n      });\n      this.setBreadCrumb(newRoute);\n      this.setTagNavList(getNewTagList(this.tagNavList, newRoute));\n      this.$refs.sideMenu.updateOpenName(newRoute.name);\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    /**\r\n     * @description 初始化设置面包屑导航和标签导航\r\n     */\n    this.setTagNavList();\n    this.setHomeRoute(routers);\n    var _this$$route = this.$route,\n        name = _this$$route.name,\n        params = _this$$route.params,\n        query = _this$$route.query,\n        meta = _this$$route.meta;\n    this.addTag({\n      route: {\n        name: name,\n        params: params,\n        query: query,\n        meta: meta\n      }\n    });\n    this.setBreadCrumb(this.$route); // 设置初始语言\n\n    this.setLocal(this.$i18n.locale); // 如果当前打开页面不在标签栏中，跳到homeName页\n\n    if (!this.tagNavList.find(function (item) {\n      return item.name === _this.$route.name;\n    })) {\n      this.$router.push({\n        name: this.$config.homeName\n      });\n    } // 获取未读消息条数\n\n\n    this.getUnreadMessageCount();\n  }\n};",{"version":3,"sources":["main.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <Layout style=\"height: 100%\" class=\"main\">\r\n    <Sider hide-trigger collapsible :width=\"256\" :collapsed-width=\"64\" v-model=\"collapsed\" class=\"left-sider\" :style=\"{overflow: 'hidden'}\">\r\n      <side-menu accordion ref=\"sideMenu\" :active-name=\"$route.name\" :collapsed=\"collapsed\" @on-select=\"turnToPage\" :menu-list=\"menuList\">\r\n        <!-- 需要放在菜单上面的内容，如Logo，写在side-menu标签内部，如下 -->\r\n        <div class=\"logo-con\">\r\n          <img v-show=\"!collapsed\" :src=\"maxLogo\" key=\"max-logo\" />\r\n          <img v-show=\"collapsed\" :src=\"minLogo\" key=\"min-logo\" />\r\n        </div>\r\n      </side-menu>\r\n    </Sider>\r\n    <Layout>\r\n      <Header class=\"header-con\">\r\n        <header-bar :collapsed=\"collapsed\" @on-coll-change=\"handleCollapsedChange\">\r\n          <user :message-unread-count=\"unreadCount\" :user-avatar=\"userAvatar\"/>\r\n          <language v-if=\"$config.useI18n\" @on-lang-change=\"setLocal\" style=\"margin-right: 10px;\" :lang=\"local\"/>\r\n          <error-store v-if=\"$config.plugin['error-store'] && $config.plugin['error-store'].showInHeader\" :has-read=\"hasReadErrorPage\" :count=\"errorCount\"></error-store>\r\n          <fullscreen v-model=\"isFullscreen\" style=\"margin-right: 10px;\"/>\r\n        </header-bar>\r\n      </Header>\r\n      <Content class=\"main-content-con\">\r\n        <Layout class=\"main-layout-con\">\r\n          <div class=\"tag-nav-wrapper\">\r\n            <tags-nav :value=\"$route\" @input=\"handleClick\" :list=\"tagNavList\" @on-close=\"handleCloseTag\"/>\r\n          </div>\r\n          <Content class=\"content-wrapper\">\r\n            <keep-alive :include=\"cacheList\">\r\n              <router-view/>\r\n            </keep-alive>\r\n            <ABackTop :height=\"100\" :bottom=\"80\" :right=\"50\" container=\".content-wrapper\"></ABackTop>\r\n          </Content>\r\n        </Layout>\r\n      </Content>\r\n    </Layout>\r\n  </Layout>\r\n</template>\r\n<script>\r\nimport SideMenu from './components/side-menu'\r\nimport HeaderBar from './components/header-bar'\r\nimport TagsNav from './components/tags-nav'\r\nimport User from './components/user'\r\nimport ABackTop from './components/a-back-top'\r\nimport Fullscreen from './components/fullscreen'\r\nimport Language from './components/language'\r\nimport ErrorStore from './components/error-store'\r\nimport { mapMutations, mapActions, mapGetters } from 'vuex'\r\nimport { getNewTagList, routeEqual } from '@/libs/util'\r\nimport routers from '@/router/routers'\r\nimport minLogo from '@/assets/images/logo-min.jpg'\r\nimport maxLogo from '@/assets/images/logo.jpg'\r\nimport './main.less'\r\nexport default {\r\n  name: 'Main',\r\n  components: {\r\n    SideMenu,\r\n    HeaderBar,\r\n    Language,\r\n    TagsNav,\r\n    Fullscreen,\r\n    ErrorStore,\r\n    User,\r\n    ABackTop\r\n  },\r\n  data () {\r\n    return {\r\n      collapsed: false,\r\n      minLogo,\r\n      maxLogo,\r\n      isFullscreen: false\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters([\r\n      'errorCount'\r\n    ]),\r\n    tagNavList () {\r\n      return this.$store.state.app.tagNavList\r\n    },\r\n    tagRouter () {\r\n      return this.$store.state.app.tagRouter\r\n    },\r\n    userAvatar () {\r\n      return this.$store.state.user.avatarImgPath\r\n    },\r\n    cacheList () {\r\n      const list = ['ParentView', ...this.tagNavList.length ? this.tagNavList.filter(item => !(item.meta && item.meta.notCache)).map(item => item.name) : []]\r\n      return list\r\n    },\r\n    menuList () {\r\n      return this.$store.getters.menuList\r\n    },\r\n    local () {\r\n      return this.$store.state.app.local\r\n    },\r\n    hasReadErrorPage () {\r\n      return this.$store.state.app.hasReadErrorPage\r\n    },\r\n    unreadCount () {\r\n      return this.$store.state.user.unreadCount\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapMutations([\r\n      'setBreadCrumb',\r\n      'setTagNavList',\r\n      'addTag',\r\n      'setLocal',\r\n      'setHomeRoute',\r\n      'closeTag'\r\n    ]),\r\n    ...mapActions([\r\n      'handleLogin',\r\n      'getUnreadMessageCount'\r\n    ]),\r\n    turnToPage (route) {\r\n      let { name, params, query } = {}\r\n      if (typeof route === 'string') name = route\r\n      else {\r\n        name = route.name\r\n        params = route.params\r\n        query = route.query\r\n      }\r\n      if (name.indexOf('isTurnByHref_') > -1) {\r\n        window.open(name.split('_')[1])\r\n        return\r\n      }\r\n      this.$router.push({\r\n        name,\r\n        params,\r\n        query\r\n      })\r\n    },\r\n    handleCollapsedChange (state) {\r\n      this.collapsed = state\r\n    },\r\n    handleCloseTag (res, type, route) {\r\n      if (type !== 'others') {\r\n        if (type === 'all') {\r\n          this.turnToPage(this.$config.homeName)\r\n        } else {\r\n          if (routeEqual(this.$route, route)) {\r\n            this.closeTag(route)\r\n          }\r\n        }\r\n      }\r\n      this.setTagNavList(res)\r\n    },\r\n    handleClick (item) {\r\n      this.turnToPage(item)\r\n    }\r\n  },\r\n  watch: {\r\n    '$route' (newRoute) {\r\n      const { name, query, params, meta } = newRoute\r\n      this.addTag({\r\n        route: { name, query, params, meta },\r\n        type: 'push'\r\n      })\r\n      this.setBreadCrumb(newRoute)\r\n      this.setTagNavList(getNewTagList(this.tagNavList, newRoute))\r\n      this.$refs.sideMenu.updateOpenName(newRoute.name)\r\n    }\r\n  },\r\n  mounted () {\r\n    /**\r\n     * @description 初始化设置面包屑导航和标签导航\r\n     */\r\n    this.setTagNavList()\r\n    this.setHomeRoute(routers)\r\n    const { name, params, query, meta } = this.$route\r\n    this.addTag({\r\n      route: { name, params, query, meta }\r\n    })\r\n    this.setBreadCrumb(this.$route)\r\n    // 设置初始语言\r\n    this.setLocal(this.$i18n.locale)\r\n    // 如果当前打开页面不在标签栏中，跳到homeName页\r\n    if (!this.tagNavList.find(item => item.name === this.$route.name)) {\r\n      this.$router.push({\r\n        name: this.$config.homeName\r\n      })\r\n    }\r\n    // 获取未读消息条数\r\n    this.getUnreadMessageCount()\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":"src/components/main"}]}